#summary How to use the toolkit in Clojure
#labels julia

= Introduction =

The Java code from this toolkit can easily be used in [http://julialang.org/ Julia].

Here we give only a brief overview of calling Java code from [http://julialang.org/ Julia]; several longer examples of using the JIDT toolkit in Julia can be viewed at [JuliaExamples].

= Using Java objects in Julia =

First, you need to install the [http://aviks.github.io/JavaCall.jl/ JavaCall] package in Julia; this is done inside a Julia session by calling: `Pkg.add("JavaCall")`.

You can then run your Java code in Julia as follows (CHECK THESE PROPERLY):
 # Include the JavaCall package: `using JavaCall`
 # Initialise the JavaCall package and tell it where our `infodynamics.jar` file is, e.g.: `JavaCall.init(["-Xmx128M", "-Djava.class.path=$(jarLocation)"])`
 # Import the classes you wish to use, e.g. `teDiscrete = @jimport infodynamics.measures.discrete.TransferEntropyCalculatorDiscrete`.
 # Create an instance of the calculator you wish to use, e.g. `teCalc = teDiscrete((int,int,), 2, 1)`
 # Call methods on the object, e.g. `jcall(teCalc, "initialise", ,())`.

*Array conversion* -- multi-dimensional arrays are not yet supported. We're working on a conversion script ...
